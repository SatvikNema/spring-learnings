<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
       xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop = "http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">


    <bean name="shapeService" class="org.satvik.springDemo.demo.service.ShapeService">
        <property name="triangle" ref="triangle" />
        <property name="circle" ref="circle_lol" />
    </bean>

    <bean id = "triangle" class = "org.satvik.springDemo.demo.pojo.Triangle">
        <constructor-arg index="1" value="Equilateral" />
        <constructor-arg index="0" value="20" />

        <property name="a" ref="point0" />

        <property name="b" ref="point1" />

        <property name="c" ref="point2" />

    </bean>

    <bean id = "point0" class = "org.satvik.springDemo.demo.pojo.Point">
        <property name="x" value="0" />
        <property name="y" value="0" />
    </bean>

    <bean id = "point1" class = "org.satvik.springDemo.demo.pojo.Point">
        <property name="x" value="1" />
        <property name="y" value="1" />
    </bean>

    <bean id="point2" class = "org.satvik.springDemo.demo.pojo.Point">
        <property name="x" value="-1" />
        <property name="y" value="-1" />
    </bean>

<!--    <bean id = "circle" class = "org.satvik.springDemo.demo.pojo.Circle">-->

<!--    </bean>-->

    <bean id="circle_center" class = "org.satvik.springDemo.demo.pojo.Point">
        <property name="x" value="-100" />
        <property name="y" value="-100" />
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>myMessages</value>
            </list>
        </property>
    </bean>

    <bean name="someLoggingAspect" class="org.satvik.springDemo.demo.aspects.LoggingAspect"></bean>

    <aop:config>

        <!--  fixme this is same as adding @aspect annotation to the LoggingAspect class  -->
        <aop:aspect id="loggingAspect" ref="someLoggingAspect">

            <!--  fixme This is same as:
                    @Pointcut("execution(* org.satvik..*.get*())")
                    public void allGetter(){}
             -->
            <aop:pointcut id="allGetter" expression="execution(* org.satvik..*.get*())" />

            <!--  fixme this is same as
                    @Before("allGetter()")
                    public void getterAdvice(JoinPoint joinPoint){
                        System.out.println("getter method called for: "+joinPoint.getTarget());
                    }
                    refer LoggingAspect class
             -->
            <aop:before pointcut-ref="allGetter" method="getterAdvice" />
        </aop:aspect>
    </aop:config>

    <context:annotation-config/>

    <context:component-scan base-package="org.satvik.springDemo.demo" />

    <aop:aspectj-autoproxy />

</beans>
